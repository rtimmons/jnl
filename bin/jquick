#!/usr/bin/env perl -w
use strict;
use warnings;

use FindBin qw($Bin);
use lib "$Bin/../lib";

use Carp;

use jnl qw(dbdir);

sub qlinks {
    my ($dbdir) = @_;

    my $new_links = {};
    foreach my $f (<$dbdir/worklogs/*>) {
        open my $fh, "<", $f or croak $!;
        while (<$fh>) {
            if ( m/quick\(([-_a-zA-Z0-9]+)\)/ ) {
                my $q = $1;
                if( defined($new_links->{$q}) ) {
                    croak "Link for $q already defined as $new_links->{$q}";
                }
                $new_links->{$q} = $f;
            }
        }
        close $fh or croak $!;
    }
    $new_links;
}

# sub htos {
#     my ($href) = @_;
#     my @out = ();
#     for my $k (keys %$href) {
#         push @out, $k.'=>'.$href->{$k};
#     }
#     return join('', '{',join(', ',@out),'}');
# }

sub clean_links {
    my ($dbdir) = @_;
    foreach my $l (<$dbdir/quick/*>) {
        if ( -l $l ) {
            unlink $l or croak $!;
        }
    }
}

sub create_links {
    my ($links, $dbdir) = @_;
    foreach my $q (keys %$links) {
        my $to = $links->{$q};
        my $dest = "$dbdir/quick/$q.txt";
        if ( -e $dest ) {
            next;
        }
        symlink $to, $dest;
    }
}


sub main {
    my $dbdir = dbdir();
    my $quickdir = "$dbdir/quick";
    if ( ! -d $quickdir ) {
        mkdir $quickdir or croak $!;
    }
    clean_links($dbdir);
    my $nl = qlinks($dbdir);
    create_links($nl, $dbdir);
    `open -a Finder "$quickdir"`;
}


if ( $0 eq __FILE__ ) {
    main(@ARGV);
}
